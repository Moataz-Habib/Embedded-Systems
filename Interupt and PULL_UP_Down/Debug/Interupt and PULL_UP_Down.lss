
Interupt and PULL_UP_Down.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001fa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  000001fa  0000026e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000270  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002a0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  000002dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000081c  00000000  00000000  00000354  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000612  00000000  00000000  00000b70  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000049f  00000000  00000000  00001182  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000190  00000000  00000000  00001624  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003fe  00000000  00000000  000017b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003f5  00000000  00000000  00001bb2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00001fa7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__vector_1>
   8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__vector_2>
   c:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__vector_3>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea ef       	ldi	r30, 0xFA	; 250
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 36       	cpi	r26, 0x62	; 98
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include "Mcal/DIO/DIO_reg.h"
#include "LIB/BIT_MATH.h"
u8 val=0xFF;
int main(void)
{
    DIO_SetPortDirection(PORTA,0xFF);
  82:	6f ef       	ldi	r22, 0xFF	; 255
  84:	80 e0       	ldi	r24, 0x00	; 0
  86:	0e 94 db 00 	call	0x1b6	; 0x1b6 <DIO_SetPortDirection>
	    DIO_SetPortValue(PORTA,0x00);
  8a:	60 e0       	ldi	r22, 0x00	; 0
  8c:	80 e0       	ldi	r24, 0x00	; 0
  8e:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <DIO_SetPortValue>
SET_BIT(GICR,5);
  92:	8b b7       	in	r24, 0x3b	; 59
  94:	80 62       	ori	r24, 0x20	; 32
  96:	8b bf       	out	0x3b, r24	; 59
SET_BIT(GICR,6);
  98:	8b b7       	in	r24, 0x3b	; 59
  9a:	80 64       	ori	r24, 0x40	; 64
  9c:	8b bf       	out	0x3b, r24	; 59
SET_BIT(GICR,7);
  9e:	8b b7       	in	r24, 0x3b	; 59
  a0:	80 68       	ori	r24, 0x80	; 128
  a2:	8b bf       	out	0x3b, r24	; 59
SET_BIT(MCUCR,0); 
  a4:	85 b7       	in	r24, 0x35	; 53
  a6:	81 60       	ori	r24, 0x01	; 1
  a8:	85 bf       	out	0x35, r24	; 53
CLR_BIT(MCUCR,1);
  aa:	85 b7       	in	r24, 0x35	; 53
  ac:	8d 7f       	andi	r24, 0xFD	; 253
  ae:	85 bf       	out	0x35, r24	; 53
SET_BIT(MCUCR,2);
  b0:	85 b7       	in	r24, 0x35	; 53
  b2:	84 60       	ori	r24, 0x04	; 4
  b4:	85 bf       	out	0x35, r24	; 53
SET_BIT(MCUCR,3);
  b6:	85 b7       	in	r24, 0x35	; 53
  b8:	88 60       	ori	r24, 0x08	; 8
  ba:	85 bf       	out	0x35, r24	; 53
SET_BIT(MCUSR,6);
  bc:	84 b7       	in	r24, 0x34	; 52
  be:	80 64       	ori	r24, 0x40	; 64
  c0:	84 bf       	out	0x34, r24	; 52
sei();
  c2:	78 94       	sei
  c4:	ff cf       	rjmp	.-2      	; 0xc4 <main+0x42>

000000c6 <__vector_1>:
    {

	
    }
}
ISR(INT0_vect){
  c6:	1f 92       	push	r1
  c8:	0f 92       	push	r0
  ca:	0f b6       	in	r0, 0x3f	; 63
  cc:	0f 92       	push	r0
  ce:	11 24       	eor	r1, r1
  d0:	2f 93       	push	r18
  d2:	3f 93       	push	r19
  d4:	4f 93       	push	r20
  d6:	5f 93       	push	r21
  d8:	6f 93       	push	r22
  da:	7f 93       	push	r23
  dc:	8f 93       	push	r24
  de:	9f 93       	push	r25
  e0:	af 93       	push	r26
  e2:	bf 93       	push	r27
  e4:	ef 93       	push	r30
  e6:	ff 93       	push	r31
DIO_SetPortValue(PORTA,val);
  e8:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  ec:	80 e0       	ldi	r24, 0x00	; 0
  ee:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <DIO_SetPortValue>
val=(~val);
  f2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  f6:	80 95       	com	r24
  f8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
}
  fc:	ff 91       	pop	r31
  fe:	ef 91       	pop	r30
 100:	bf 91       	pop	r27
 102:	af 91       	pop	r26
 104:	9f 91       	pop	r25
 106:	8f 91       	pop	r24
 108:	7f 91       	pop	r23
 10a:	6f 91       	pop	r22
 10c:	5f 91       	pop	r21
 10e:	4f 91       	pop	r20
 110:	3f 91       	pop	r19
 112:	2f 91       	pop	r18
 114:	0f 90       	pop	r0
 116:	0f be       	out	0x3f, r0	; 63
 118:	0f 90       	pop	r0
 11a:	1f 90       	pop	r1
 11c:	18 95       	reti

0000011e <__vector_2>:
ISR(INT1_vect){
 11e:	1f 92       	push	r1
 120:	0f 92       	push	r0
 122:	0f b6       	in	r0, 0x3f	; 63
 124:	0f 92       	push	r0
 126:	11 24       	eor	r1, r1
 128:	2f 93       	push	r18
 12a:	3f 93       	push	r19
 12c:	4f 93       	push	r20
 12e:	5f 93       	push	r21
 130:	6f 93       	push	r22
 132:	7f 93       	push	r23
 134:	8f 93       	push	r24
 136:	9f 93       	push	r25
 138:	af 93       	push	r26
 13a:	bf 93       	push	r27
 13c:	ef 93       	push	r30
 13e:	ff 93       	push	r31
	DIO_SetPortValue(PORTA,0x00);
 140:	60 e0       	ldi	r22, 0x00	; 0
 142:	80 e0       	ldi	r24, 0x00	; 0
 144:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <DIO_SetPortValue>
}
 148:	ff 91       	pop	r31
 14a:	ef 91       	pop	r30
 14c:	bf 91       	pop	r27
 14e:	af 91       	pop	r26
 150:	9f 91       	pop	r25
 152:	8f 91       	pop	r24
 154:	7f 91       	pop	r23
 156:	6f 91       	pop	r22
 158:	5f 91       	pop	r21
 15a:	4f 91       	pop	r20
 15c:	3f 91       	pop	r19
 15e:	2f 91       	pop	r18
 160:	0f 90       	pop	r0
 162:	0f be       	out	0x3f, r0	; 63
 164:	0f 90       	pop	r0
 166:	1f 90       	pop	r1
 168:	18 95       	reti

0000016a <__vector_3>:
ISR(INT2_vect){
 16a:	1f 92       	push	r1
 16c:	0f 92       	push	r0
 16e:	0f b6       	in	r0, 0x3f	; 63
 170:	0f 92       	push	r0
 172:	11 24       	eor	r1, r1
 174:	2f 93       	push	r18
 176:	3f 93       	push	r19
 178:	4f 93       	push	r20
 17a:	5f 93       	push	r21
 17c:	6f 93       	push	r22
 17e:	7f 93       	push	r23
 180:	8f 93       	push	r24
 182:	9f 93       	push	r25
 184:	af 93       	push	r26
 186:	bf 93       	push	r27
 188:	ef 93       	push	r30
 18a:	ff 93       	push	r31
	DIO_SetPortValue(PORTA,0x0F);
 18c:	6f e0       	ldi	r22, 0x0F	; 15
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <DIO_SetPortValue>
}
 194:	ff 91       	pop	r31
 196:	ef 91       	pop	r30
 198:	bf 91       	pop	r27
 19a:	af 91       	pop	r26
 19c:	9f 91       	pop	r25
 19e:	8f 91       	pop	r24
 1a0:	7f 91       	pop	r23
 1a2:	6f 91       	pop	r22
 1a4:	5f 91       	pop	r21
 1a6:	4f 91       	pop	r20
 1a8:	3f 91       	pop	r19
 1aa:	2f 91       	pop	r18
 1ac:	0f 90       	pop	r0
 1ae:	0f be       	out	0x3f, r0	; 63
 1b0:	0f 90       	pop	r0
 1b2:	1f 90       	pop	r1
 1b4:	18 95       	reti

000001b6 <DIO_SetPortDirection>:
	
}


void DIO_SetPortDirection(u8 PortIdCopy, u8 PortDir){
	switch (PortIdCopy)
 1b6:	81 30       	cpi	r24, 0x01	; 1
 1b8:	41 f0       	breq	.+16     	; 0x1ca <DIO_SetPortDirection+0x14>
 1ba:	28 f0       	brcs	.+10     	; 0x1c6 <DIO_SetPortDirection+0x10>
 1bc:	82 30       	cpi	r24, 0x02	; 2
 1be:	39 f0       	breq	.+14     	; 0x1ce <DIO_SetPortDirection+0x18>
 1c0:	83 30       	cpi	r24, 0x03	; 3
 1c2:	39 f0       	breq	.+14     	; 0x1d2 <DIO_SetPortDirection+0x1c>
 1c4:	08 95       	ret
	{
		case PORTA:
		DDRA_Register=PortDir;
 1c6:	6a bb       	out	0x1a, r22	; 26
		break;
 1c8:	08 95       	ret
		case PORTB:
		DDRB_Register=PortDir;
 1ca:	67 bb       	out	0x17, r22	; 23
		break;
 1cc:	08 95       	ret
		case PORTC:
		DDRC_Register=PortDir;
 1ce:	64 bb       	out	0x14, r22	; 20
		break;
 1d0:	08 95       	ret
		case PORTD:
		DDRD_Register=PortDir;
 1d2:	61 bb       	out	0x11, r22	; 17
 1d4:	08 95       	ret

000001d6 <DIO_SetPortValue>:
		/* Your code here */
		break;
	}
}
void DIO_SetPortValue(u8 PortId,u8 ProtVal){
		switch (PortId)
 1d6:	81 30       	cpi	r24, 0x01	; 1
 1d8:	41 f0       	breq	.+16     	; 0x1ea <DIO_SetPortValue+0x14>
 1da:	28 f0       	brcs	.+10     	; 0x1e6 <DIO_SetPortValue+0x10>
 1dc:	82 30       	cpi	r24, 0x02	; 2
 1de:	39 f0       	breq	.+14     	; 0x1ee <DIO_SetPortValue+0x18>
 1e0:	83 30       	cpi	r24, 0x03	; 3
 1e2:	39 f0       	breq	.+14     	; 0x1f2 <DIO_SetPortValue+0x1c>
 1e4:	08 95       	ret
		{
			case PORTA:
			PORTA_Register=ProtVal;
 1e6:	6b bb       	out	0x1b, r22	; 27
			break;
 1e8:	08 95       	ret
			case PORTB:
			PORTB_Register=ProtVal;
 1ea:	68 bb       	out	0x18, r22	; 24
			break;
 1ec:	08 95       	ret
			case PORTC:
			PORTC_Register=ProtVal;
 1ee:	65 bb       	out	0x15, r22	; 21
			break;
 1f0:	08 95       	ret
			case PORTD:
			PORTD_Register=ProtVal;
 1f2:	62 bb       	out	0x12, r22	; 18
 1f4:	08 95       	ret

000001f6 <_exit>:
 1f6:	f8 94       	cli

000001f8 <__stop_program>:
 1f8:	ff cf       	rjmp	.-2      	; 0x1f8 <__stop_program>
